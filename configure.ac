AC_INIT([SOGITS],[0.1],[Yann.Thierry-mieg@lip6.fr])
# We use automake to build makefiles

AM_INIT_AUTOMAKE([-Wall -Werror foreign])

# M4 macros location
AC_CONFIG_MACRO_DIR([m4])

# option to indicate libddd folder
AC_ARG_WITH([libddd],
            [AC_HELP_STRING([--with-libddd=/root/of/libddd],
                            [specify the path of libddd])])


AM_CONDITIONAL([WITH_LIBDDD_PATH], [test "x${with_libddd}" != x])
if test "x${with_libddd}" != x; then
    AC_SUBST([LIBDDD_ROOT],[${with_libddd}])
fi


# option to indicate libspot folder
AC_ARG_WITH([libspot],
            [AC_HELP_STRING([--with-libspot=/root/of/libspot],
                            [specify the path of Spot])])


AM_CONDITIONAL([WITH_LIBSPOT_PATH], [test "x${with_libspot}" != x])
if test "x${with_libspot}" != x; then
    AC_SUBST([LIBSPOT_ROOT],[${with_libspot}])
fi

# option to indicate libits folder
AC_ARG_WITH([libits],
            [AC_HELP_STRING([--with-libits=/root/of/libits],
                            [specify the path of libits])])


AM_CONDITIONAL([WITH_LIBITS_PATH], [test "x${with_libits}" != x])
if test "x${with_libits}" != x; then
    AC_SUBST([LIBITS_ROOT],[${with_libits}])
fi



# programs used to build
# we make static libs (use ranlib)
AC_PROG_RANLIB

# we compile C++
# set Cxx compilation flags to either the value passed in
# ./configure --cxxflags=
# or none to change behavior from default cxx flags generated by autoconf
# default : -02 -g
test -z "$CFLAGS" && CFLAGS=
test -z "$CXXFLAGS" && CXXFLAGS=

#compile in C++
AC_PROG_CXX

#use bison/flex parsers
AM_PROG_LEX
AC_PROG_YACC

# Enable boost if found:
AX_BOOST_BASE
AM_CONDITIONAL([HAVE_BOOST], [test "${BOOST_DETECTED}" = "true"])


# automake :
# build these Makefile using the Makefile.in files in each directory
AC_CONFIG_FILES([
  Makefile
  src/Makefile
])

# Do it !! (mandatory)
AC_OUTPUT
